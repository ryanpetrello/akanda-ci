- hosts: all
  vars:
      repo: 'https://github.com/ryanpetrello/akanda-appliance.git'
      branch: 'ansible'
      mgt_ula_cidr: 'fdca:3ba5:a17a:acda::1/64'
      guest_macaddr: '00:16:35:AF:94:4B'
      guest_hostname: 'fdca:3ba5:a17a:acda:216:35ff:feaf:944b'

  tasks:

    ### Install necessary software ###

    - name: install necessary packages
      action: apt pkg={{ item }} state=installed update_cache=yes
      sudo: yes
      with_items:
        - git-core
        - python-pip
        - debootstrap
        - qemu-kvm
        - qemu-utils
        - bridge-utils

    - name: install diskimage-builder
      action: pip name=diskimage-builder state=present
      sudo: yes

    ### Checkout appliance builder and source code ###

    - name: clone akanda-appliance-builder repo
      git: repo="https://github.com/akanda/akanda-appliance-builder" version="master" dest="~/akanda-appliance-builder" accept_hostkey=yes

    - name: set the appliance source repo and branch
      copy:
        dest: "~/akanda-appliance-builder/diskimage-builder/elements/akanda/source-repository-akanda"
        content: "akanda git /tmp/akanda-appliance {{ repo }} {{ branch }}"

    - name: make sure the source elements file ends with a newline (ansible annoyingly consumes it)
      shell: "echo \"\" >> ~/akanda-appliance-builder/diskimage-builder/elements/akanda/source-repository-akanda"

    ### Set up a bridge for the guest ###

    - name: create a bridge
      shell: "brctl addbr br0"
      sudo: yes

    - name: add the fdca cidr to the bridge
      shell: "ip addr add {{ mgt_ula_cidr }} dev br0"
      sudo: yes

    - name: bring the bridge up
      shell: "ip link set br0 up"
      sudo: yes

    - name: add a script for bringing the tap device for qemu up
      copy:
        dest: "/etc/qemu-ifup"
        content: |
          #!/bin/sh
          ip link set tap0 master br0
          ip link set tap0 up
      sudo: yes

    ### Build and boot the image ###

    - name: build the image (be patient, this takes awhile)
      shell: "ELEMENTS_PATH=~/akanda-appliance-builder/diskimage-builder/elements DIB_RELEASE=wheezy DIB_EXTLINUX=1 disk-image-create debian vm akanda"

    - name: boot the VM (in the background)
      shell: "kvm -m 1024 -vnc :1 -net nic,macaddr={{ guest_macaddr }},model=virtio,name=akanda -net tap,ifname=tap0 -drive file=image.qcow2,if=virtio --daemonize"
      sudo: yes

    ### Make sure the VM is responsive and ready to be configured ###

    - name: wait for ssh on the service VM to come up
      command: nc -w5 -vz {{ guest_hostname }} 22
      register: ssh_result
      until: ssh_result.rc == 0
      retries: 18
      delay: 10

    - name: wait for gunicorn on the service VM to come up
      get_url: url="http://[{{ guest_hostname }}]:5000/v1/system/config" timeout=5 dest=/tmp
      register: http_result
      until: "'OK' in http_result.msg"
      retries: 18
      delay: 10
